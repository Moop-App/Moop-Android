plugins {
    id "moop.android.application"
    id "moop.android.compose"
    id "moop.android.hilt"
}
if (file("google-services.json").exists()) {
    apply plugin: 'com.google.gms.google-services'
}
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.dropbox.dependency-guard'

def useReleaseKeystore = rootProject.file("signing/app-release.jks").exists()

android {
    namespace "soup.movie"
    defaultConfig {
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("signing/app-debug.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
        release {
            if (useReleaseKeystore) {
                storeFile rootProject.file("signing/app-release.jks")
                storePassword propOrDef('storePassword', "")
                keyAlias propOrDef('keyAlias', "")
                keyPassword propOrDef('keyPassword', "")
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            manifestPlaceholders = [crashlytics_enabled: false]
        }
        benchmark {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            matchingFallbacks = ['release']
            debuggable false
            manifestPlaceholders = [crashlytics_enabled: true]
        }
        release {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlytics_enabled: true]
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation project(":core:ads")
    implementation project(":core:analytics")
    implementation project(":core:appupdate-api")
    implementation project(":core:common")
    implementation project(":core:designsystem")
    implementation project(":core:logger")
    implementation project(":data:repository-api")
    implementation project(":data:model")
    implementation project(":feature:home")
    implementation project(":feature:detail")
    implementation project(":feature:search")
    implementation project(":feature:theater")
    implementation project(":feature:theatermap")
    implementation project(":feature:settings")
    implementation project(":feature:theme")
    implementation project(':feature:navigator-api')
    runtimeOnly project(':feature:navigator-impl')
    implementation project(':feature:notification-api')
    runtimeOnly project(':feature:notification-impl')
    implementation project(':feature:tasks-api')
    runtimeOnly project(':feature:tasks-impl')
    implementation project(":feature:deeplink")
    runtimeOnly project(":data:network-impl")
    runtimeOnly project(":data:database-impl")
    runtimeOnly project(":data:repository-impl")
    runtimeOnly project(":data:settings-impl")
    runtimeOnly project(":core:appupdate-impl")
    runtimeOnly project(":core:imageloading-impl")

    implementation libs.kotlin.stdlib
    implementation libs.coroutines.core
    implementation libs.coroutines.android

    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment
    implementation libs.androidx.startup

    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.compiler

    implementation libs.androidx.navigation.compose

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics
    implementation libs.firebase.config
    implementation libs.firebase.crashlytics
    implementation libs.firebase.messaging
    implementation libs.firebase.dynamicLinks
    implementation libs.firebase.perf

    implementation libs.androidx.activity.compose
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.compose.foundation
    implementation libs.compose.material
    implementation libs.compose.ui
    implementation libs.accompanist.drawablepainter
    implementation libs.metronome.visibility

    implementation libs.androidx.profileinstaller

    implementation libs.kakaoLink

    testImplementation project(":testing")
    androidTestImplementation project(":testing")
}

dependencyGuard {
    // All dependencies included in Production Release APK
    configuration("releaseRuntimeClasspath")
}

task applyDependencyBaseline {
    dependsOn dependencyGuardBaseline
}
