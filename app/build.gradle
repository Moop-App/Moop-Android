plugins {
    id "moop.android.application"
    id "moop.android.compose"
    id "moop.android.hilt"
    alias libs.plugins.firebase.crashlytics
    alias libs.plugins.firebase.performance
    alias libs.plugins.dependencyGuard
}
if (file("google-services.json").exists()) {
    apply plugin: 'com.google.gms.google-services'
}

def useReleaseKeystore = rootProject.file("signing/app-release.jks").exists()

android {
    namespace "soup.movie"
    defaultConfig {
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("signing/app-debug.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
        release {
            if (useReleaseKeystore) {
                storeFile rootProject.file("signing/app-release.jks")
                storePassword propOrDef('storePassword', "")
                keyAlias propOrDef('keyAlias', "")
                keyPassword propOrDef('keyPassword', "")
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            manifestPlaceholders = [crashlytics_enabled: false]
        }
        benchmark {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            matchingFallbacks = ['release']
            debuggable false
            manifestPlaceholders = [crashlytics_enabled: true]
        }
        release {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlytics_enabled: true]
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation projects.core.ads
    implementation projects.core.analytics.api
    runtimeOnly projects.core.analytics.impl
    implementation projects.core.appupdate.api
    implementation projects.core.kotlin
    implementation projects.core.designsystem
    implementation projects.core.logger
    implementation projects.data.repository.api
    implementation projects.data.model
    implementation projects.feature.home
    implementation projects.feature.detail
    implementation projects.feature.search
    implementation projects.feature.theater
    implementation projects.feature.theatermap
    implementation projects.feature.settings
    implementation projects.feature.theme
    implementation projects.feature.navigator.api
    runtimeOnly projects.feature.navigator.impl
    implementation projects.feature.notification.api
    runtimeOnly projects.feature.notification.impl
    implementation projects.feature.tasks.api
    runtimeOnly projects.feature.tasks.impl
    implementation projects.feature.deeplink
    runtimeOnly projects.data.network.impl
    runtimeOnly projects.data.database.impl
    runtimeOnly projects.data.repository.impl
    runtimeOnly projects.data.settings.impl
    runtimeOnly projects.core.appupdate.impl
    runtimeOnly projects.core.imageloading.impl

    implementation libs.kotlin.stdlib
    implementation libs.coroutines.core
    implementation libs.coroutines.android

    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment
    implementation libs.androidx.startup

    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.compiler

    implementation libs.androidx.navigation.compose

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.cloudmessaging
    implementation libs.firebase.crashlytics
    implementation libs.firebase.dynamiclinks
    implementation libs.firebase.performance
    implementation libs.firebase.remoteconfig

    implementation libs.androidx.activity.compose
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.compose.foundation
    implementation libs.compose.material
    implementation libs.compose.ui
    implementation libs.accompanist.drawablepainter

    implementation libs.androidx.profileinstaller

    implementation libs.kakao.share

    testImplementation projects.testing
    androidTestImplementation projects.testing
}

dependencyGuard {
    // All dependencies included in Production Release APK
    configuration("releaseRuntimeClasspath")
}

task applyDependencyBaseline {
    dependsOn dependencyGuardBaseline
}
