buildscript {
    repositories {
        google()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath libs.android.pluginGradle
        classpath libs.kotlin.pluginGradle
        classpath libs.kotlin.serializationPluginGradle
        classpath libs.dagger.hilt.pluginGradle
        classpath libs.google.pluginGradle
        classpath libs.firebase.crashlytics.pluginGradle
        classpath libs.firebase.perf.pluginGradle
        classpath libs.dependencyGuard.pluginGradle
    }
}

plugins {
    alias(libs.plugins.spotless)
    alias(libs.plugins.ksp)
    alias(libs.plugins.dependencyGuard)
}

apply from: "$rootDir/gradle/version.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com/' }
        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/' }
        maven { url 'https://naver.jfrog.io/artifactory/maven/' }
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint("0.41.0")
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }
}

dependencyGuard {
    configuration("classpath")
}

Object propOrDef(String propertyName, Object defaultValue) {
    def properties = new Properties()
    def keyFile = rootProject.file("signing/key.properties")
    if (keyFile.exists()) {
        keyFile.withInputStream { stream -> properties.load(stream) }
    }
    def propertyValue = properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}
