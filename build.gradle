buildscript {
    ext.buildConfig = [
            'versionCode': 106,
            'versionName': "1.0.6",
    ]
    ext.firebase = [
            'analytics'   : "com.google.firebase:firebase-analytics-ktx",
            'config'      : "com.google.firebase:firebase-config-ktx",
            'crashlytics' : "com.google.firebase:firebase-crashlytics-ktx",
            'dynamicLinks': "com.google.firebase:firebase-dynamic-links-ktx",
            'messaging'   : "com.google.firebase:firebase-messaging-ktx",
            'perf'        : "com.google.firebase:firebase-perf-ktx",
    ]
    repositories {
        google()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath libs.android.pluginGradle
        classpath libs.kotlin.pluginGradle
        classpath libs.kotlin.serializationPluginGradle
        classpath libs.dagger.hilt.pluginGradle
        classpath libs.androidx.navigation.safeArgsPluginGradle
        classpath libs.google.pluginGradle
        classpath libs.firebase.crashlytics.pluginGradle
        classpath libs.firebase.perf.pluginGradle
        classpath libs.dependencyGuard.pluginGradle
    }
}

plugins {
    alias(libs.plugins.ksp)
    alias(libs.plugins.dependencyGuard)
}

allprojects {
    repositories {
        google()
        mavenCentral()

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com/' }
        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/' }
        maven { url 'https://naver.jfrog.io/artifactory/maven/' }
    }
}

dependencyGuard {
    configuration("classpath")
}

Object propOrDef(String propertyName, Object defaultValue) {
    def properties = new Properties()
    def keyFile = rootProject.file("signing/key.properties")
    if (keyFile.exists()) {
        keyFile.withInputStream { stream -> properties.load(stream) }
    }
    def propertyValue = properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}
