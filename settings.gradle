pluginManagement {
    includeBuild("build-logic")
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google {
            content {
                includeGroupByRegex("com.android.*")
                includeGroupByRegex("androidx.*")
                includeGroupByRegex("com.google.*")
            }
        }
        maven {
            url "https://jitpack.io"
            content {
                includeGroup "com.github.fornewid.metronome"
            }
        }
        maven {
            url 'https://devrepo.kakao.com/nexus/content/groups/public/'
            content {
                includeGroup "com.kakao.sdk"
            }
        }
        maven {
            url 'https://naver.jfrog.io/artifactory/maven/'
            content {
                includeGroup "com.naver.maps"
            }
        }

        mavenCentral()
    }
}

// Automatically detect modules.
rootDir.eachDir { dir ->
    findModule("", dir).each { module ->
        include "$module"
    }
}

private static List<String> findModule(String parent, File dir) {
    if (!dir.isDirectory() || isProject(dir)) {
        return Collections.emptyList()
    }

    List<String> modules = new ArrayList<String>()
    String current = "$parent:${dir.name}"
    if (isModule(dir)) {
        println "include '$current'"
        modules.add("$current")
    } else {
        var files = dir.listFiles()
        if (files != null) {
            files.each { file ->
                if (file.isDirectory()) {
                    modules.addAll(findModule(current, file))
                }
            }
        }
    }
    return modules
}

private static boolean isProject(File file) {
    var files = file.listFiles()
    if (files == null) {
        return false
    }
    return files.any {
        it.isFile() && (it.name == "settings.gradle" || it.name == "settings.gradle.kts")
    }
}

private static boolean isModule(File file) {
    var files = file.listFiles()
    if (files == null) {
        return false
    }

    return files.any {
        it.isFile() && (it.name == "build.gradle" || it.name == "build.gradle.kts")
    }
}
