import dependencies.Libs

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

apply from: rootProject.file('gradle/android.gradle')

android.buildTypes.release {
    consumerProguardFiles 'proguard-rules-navigation.pro'
}

dependencies {
    implementation project(':model')

    implementation Libs.Kotlin.stdlib

    implementation Libs.AndroidX.activity
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.browser
    implementation Libs.AndroidX.core
    implementation Libs.AndroidX.constraintlayout
    implementation Libs.AndroidX.fragment
    implementation Libs.AndroidX.recyclerview
    implementation Libs.AndroidX.startup

    api Libs.Material.view

    implementation Libs.AndroidX.Lifecycle.runtime
    implementation Libs.AndroidX.Lifecycle.compiler

    implementation Libs.AndroidX.Navigation.fragment
    implementation Libs.AndroidX.Navigation.dynamicFeaturesFragment

    implementation Libs.Dagger.hilt
    kapt Libs.Dagger.hiltCompiler
    kapt Libs.AndroidX.Hilt.compiler

    implementation Libs.Coil.runtime

    implementation platform(Libs.Firebase.bom)
    implementation Libs.Firebase.dynamicLinks
    implementation Libs.Firebase.ads

    api Libs.threetenAbp
    implementation Libs.timber
    implementation Libs.kakaoLink

    testImplementation Libs.Test.junit
    androidTestImplementation Libs.AndroidX.Test.runner
    androidTestImplementation Libs.AndroidX.Test.espresso
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = [
                '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi'
        ]
    }
}

task buildNavigationProguard doLast {
    def navigationGraphXml = project.file("src/main/res/navigation/nav_graph.xml")

    // XmlParser didn't work so let me use the dirty hack
    if (!navigationGraphXml.text.contains("xmlns:app=\"http://schemas.android.com/apk/res-auto\"")) {
        throw new GradleScriptException("the namespace has been changed from app")
    }

    def fqdns = []

    navigationGraphXml.eachLine {
        def line = it.trim()

        if (line.startsWith("android:name=\"")) {
            def className = line.substring("android:name=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        } else if (line.startsWith("app:argType=\"")) {
            def className = line.substring("app:argType=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        }
    }

    project.file("proguard-rules-navigation.pro").write(fqdns.sort().collect {
        "-keepnames class $it"
    }.join("\n"))
}

preBuild.dependsOn(buildNavigationProguard)
